{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{393:function(t,a,s){\"use strict\";s.r(a);var e=s(54),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"due-js-是什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#due-js-是什么\"}},[t._v(\"#\")]),t._v(\" Due.js 是什么\")]),t._v(\" \"),s(\"p\",[t._v(\"Due (读音 /djuː/)，是一套高度模仿 Vue.js 的 MVVM 小框架，Due 实现了 Vue.js 的基本功能，持续更新中...\")]),t._v(\" \"),s(\"h1\",{attrs:{id:\"目录结构\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#目录结构\"}},[t._v(\"#\")]),t._v(\" 目录结构\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-plain extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-plain\"}},[s(\"code\",[t._v(\"frontend-mvvm\\n├─ .git\\n│    ├─ HEAD\\n│    ├─ config\\n│    ├─ description\\n│    ├─ hooks\\n│    │    ├─ applypatch-msg.sample\\n│    │    ├─ commit-msg.sample\\n│    │    ├─ fsmonitor-watchman.sample\\n│    │    ├─ post-update.sample\\n│    │    ├─ pre-applypatch.sample\\n│    │    ├─ pre-commit.sample\\n│    │    ├─ pre-merge-commit.sample\\n│    │    ├─ pre-push.sample\\n│    │    ├─ pre-rebase.sample\\n│    │    ├─ pre-receive.sample\\n│    │    ├─ prepare-commit-msg.sample\\n│    │    ├─ push-to-checkout.sample\\n│    │    └─ update.sample\\n│    ├─ index\\n│    ├─ info\\n│    │    └─ exclude\\n│    ├─ logs\\n│    │    ├─ HEAD\\n│    │    └─ refs\\n│    ├─ objects\\n│    │    ├─ info\\n│    │    └─ pack\\n│    ├─ packed-refs\\n│    └─ refs\\n│           ├─ heads\\n│           ├─ remotes\\n│           └─ tags\\n├─ TestChatGroup.html\\n├─ TestVue.html\\n├─ a.png\\n├─ axios.js\\n├─ core\\n│    ├─ index.js\\n│    ├─ instance\\n│    │    ├─ grammer\\n│    │    ├─ index.js\\n│    │    ├─ init.js\\n│    │    ├─ mount.js\\n│    │    ├─ proxy.js\\n│    │    └─ render.js\\n│    ├─ util\\n│    │    ├─ Code.js\\n│    │    ├─ KeyWordsUtil.js\\n│    │    └─ ObjectUtil.js\\n│    └─ vdom\\n│           └─ vnode.js\\n└─ test\\n       └─ Due.js\\n\\n\")])])]),s(\"h2\",{attrs:{id:\"起步\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#起步\"}},[t._v(\"#\")]),t._v(\" 起步：\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"Due.js 假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的。\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"Due 框架追求轻量，简洁的风格，这里的挂载 el 只支持 id 挂载。\")])]),t._v(\" \"),s(\"p\",[t._v(\"下载：\")]),t._v(\" \"),s(\"p\",[t._v(\"引入：\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"声明式渲染\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#声明式渲染\"}},[t._v(\"#\")]),t._v(\" 声明式渲染\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" app \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Due\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  el\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"app\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  data\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    message\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Hello Due!\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"我们已经成功创建了第一个 Due 应用！看起来这跟渲染一个字符串模板非常类似，但是 Due 在背后做了大量工作。现在数据和 DOM 已经被建立了关联，所有东西都是\"),s(\"strong\",[t._v(\"响应式的\")]),t._v(\"。我们要怎么确认呢？打开你的浏览器的 JavaScript 控制台 (就在这个页面打开)，并修改 \"),s(\"code\",[t._v(\"app.message\")]),t._v(\" 的值，你将看到上例相应地更新。\")]),t._v(\" \"),s(\"p\",[t._v(\"注意我们不再和 HTML 直接交互了。一个 Due 应用会将其挂载到一个 DOM 元素上 (对于这个例子是 \"),s(\"code\",[t._v(\"#app\")]),t._v(\") 然后对其进行完全控制。那个 HTML 是我们的入口，但其余都会发生在新创建的 Due 实例内部。\")]),t._v(\" \"),s(\"h1\",{attrs:{id:\"功能实现\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#功能实现\"}},[t._v(\"#\")]),t._v(\" 功能实现\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"data-代理\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#data-代理\"}},[t._v(\"#\")]),t._v(\" Data 代理\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"代理对象\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"代理嵌套的对象\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"namespace 命名空间，主要解决对象嵌套，表示当前修改的东西是什么。比如，test.content，test.obj.a，后者就具有 obj 的命名空间。对象往下传递的时候就有了自己的命名空间：上一级传过来的命名空间+当前属性名。\")])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"代理数组\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"主要实现是对数组原型上的方法进行代理\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"虚拟-dom-树\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#虚拟-dom-树\"}},[t._v(\"#\")]),t._v(\" 虚拟 DOM 树\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"vnode\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vnode\"}},[t._v(\"#\")]),t._v(\" vnode\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"结构\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"export\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"default\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"VNode\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n   *\\n   * @param {*} tag //标签类型DIV，SPAN, INPUT, 文本节点:#TEXT\\n   * @param {*} elm // 对应的真实节点\\n   * @param {*} children //当前节点下的子节点\\n   * @param {*} text // 当前虚拟节点中的文本\\n   * @param {*} data // VNodeData,暂时保留，暂无 保留字段\\n   * @param {*} parent // 父级节点\\n   * @param {*} nodeType // 节点类型\\n   */\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"constructor\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"tag\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" elm\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" children\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" text\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" data\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" parent\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" nodeType\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"tag \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" tag\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"elm \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" elm\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"children \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" children\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"text \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" text\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"data \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" data\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"parent \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" parent\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"nodeType \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" nodeType\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"env \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 当前节点的环境变量，用于存在自己声明的变量，让子节点继承\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"instructions \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//存放指令\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"template \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 当前节点涉及到的模板\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"建立虚拟-dom-树\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#建立虚拟-dom-树\"}},[t._v(\"#\")]),t._v(\" 建立虚拟 DOM 树\")]),t._v(\" \"),s(\"p\",[t._v(\"允许先不传递 el，把 due 对象创建完了后再用 mount 方法挂载。\")]),t._v(\" \"),s(\"p\",[t._v(\"建立虚拟 dom 树，深度优先搜索\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"内容渲染\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#内容渲染\"}},[t._v(\"#\")]),t._v(\" 内容渲染\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"构建模板节点索引\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#构建模板节点索引\"}},[t._v(\"#\")]),t._v(\" 构建模板节点索引\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"模板和节点的映射\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"通过模板找到那些节点用到了这个模板：to->2 for->4\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"进行预备渲染；\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"rendervnode\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rendervnode\"}},[t._v(\"#\")]),t._v(\" renderVNode\")]),t._v(\" \"),s(\"p\",[t._v(\"渲染\"),s(\"code\",[t._v(\"{{}}\")]),t._v(\"这些特殊格式的文本，渲染成数据\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"修改属性后自动渲染\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#修改属性后自动渲染\"}},[t._v(\"#\")]),t._v(\" 修改属性后自动渲染\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"属性解析\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#属性解析\"}},[t._v(\"#\")]),t._v(\" 属性解析\")]),t._v(\" \"),s(\"p\",[t._v(\"之前识别的都是节点里的 \"),s(\"code\",[t._v(\"text nodeType==3\")]),t._v(\"，现在要识别标签上的属性\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[s(\"code\",[t._v(\"v-model\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[s(\"code\",[t._v(\"v-for\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[s(\"code\",[t._v(\"v-bind\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[s(\"code\",[t._v(\"v-on\")])])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"v-model-双向数据绑定\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v-model-双向数据绑定\"}},[t._v(\"#\")]),t._v(\" v-model 双向数据绑定\")]),t._v(\" \"),s(\"p\",[t._v(\"input 输入框的双向数据绑定：既可以修改 data 对象，data 对象改了他也会变\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"v-for-修改数组后自动渲染\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v-for-修改数组后自动渲染\"}},[t._v(\"#\")]),t._v(\" v-for 修改数组后自动渲染\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"v-bind-表达式解析-自动执行表达式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v-bind-表达式解析-自动执行表达式\"}},[t._v(\"#\")]),t._v(\" v-bind，表达式解析，自动执行表达式\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"v-on-绑定事件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v-on-绑定事件\"}},[t._v(\"#\")]),t._v(\" v-on-绑定事件\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"生命周期-created\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生命周期-created\"}},[t._v(\"#\")]),t._v(\" 生命周期-created\")]),t._v(\" \"),s(\"h1\",{attrs:{id:\"案例调试\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#案例调试\"}},[t._v(\"#\")]),t._v(\" 案例调试\")]),t._v(\" \"),s(\"p\",[t._v(\"使用 Object.defineProperty 对数据进行代理给 data 属性和框架实例\\n使用树形递归遍历根节点来建立 VNode\\n使用 ES6 的 Map 方法记录节点和模板以及模板和节点的对应关系\\n使用代理数据的 set()添加重新构建相关节点并进行渲染实现数据驱动视图等逻辑功能\\n使用记录的对应关系实现 diff 算法\\n**项目难点:**1.在 v-for 指令实现过程中遇到困难,自己最后通过在虚拟 VNode 树形结构中把包含 v-for 节点的 dom 定义成\\n虚拟节点,在递归循环建立虚拟 dom 树过程中遇到包含 v-for 属性时,先在真实 dom 树中删除它,然后通过分析 v-for 属性值建立需要循环得到的节点挂载到它原本真实父节点上,当 v-for 依赖数据变化时在其代理的 set()方法中加入相关逻辑功能(先还原之前处理 v-for 属性然后重新按照这种方法进行 VNode 的更新然后进行重新渲染) 2 在实现 v-bind 指令时,由于可能具有一些表达式用来进行判断是否在真实渲染节点中加入样式,这些指令都是字符串形式,最后自己通过 eval 来运行判断(循环 data 数据拼接字符串)\")]),t._v(\" \"),s(\"p\",[t._v(\"npm 发布\")])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}